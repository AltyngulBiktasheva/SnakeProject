class SnakeGame {
    field Snake snake; 
    // направление: 0 = стоп, 1 = вверх, 2 = вниз, 3 = влево, 4 = вправо
    field int direction;     
    field int lives;
    field int score;
    field int highScore;
    field boolean exit;
    field int xApple; 
    field int yApple; 
    field int appleCounter;

    constructor SnakeGame new() 
    {
        let snake = Snake.new(300, 126);
        let direction = 0; 
        let lives = 2;
        let score = 0;
        let highScore = 0;
        let exit = false;
        let appleCounter = 0;
        do apple();
        return this;
    }

    method void dispose() 
    {
        do snake.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method void run() 
    {
        var char key; 
        var int timer;
        let timer = 0;
        do drawBorder(); 
        
        while (~exit) 
        {
            while (key = 0) 
            {
                let key = Keyboard.keyPressed();
                do moveSnake();
            }

            let timer = timer + 1;
            if((timer / 10) = 1)
            {
                let score = score + 1;
                do Output.moveCursor(3,7);  
                do Output.printInt(score);
                let timer = 0; 
            }
            if (key = 81)  { let exit = true; }     //Q
            if (key = 131) { let direction = 1; }   //arrow up 
            if (key = 133) { let direction = 2; }   //arrow down
            if (key = 130 & ~(direction = 0)) { let direction = 3; }  //arrow left 
            if (key = 132) { let direction = 4; }   //arrow right 
            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
                do moveSnake();
            }
        } 
        return;
    }

    /** Создание окружения */
    method void drawBorder() 
    {
        do Output.moveCursor(0,0); 
        do Output.println();
        do Output.printString("Snake! Shhh");
        do Output.println();
        // Информация о змейке
        do Output.printString("Lives: ");
        do Output.printInt(lives); 
        do Output.println();
        do Output.printString("Score: ");
        do Output.printInt(score);
        do Output.println();
        do Output.println();
        do Output.printString("Hi-score: "); 
        do Output.println(); 
        do Output.printInt(highScore);
        // Границы
        do Screen.setColor(true); // задает кисти черный цвет
        do Screen.drawLine(100,0,100,255); // жирная
        do Screen.drawLine(99,0,99,255); // левая граница
        do Screen.drawLine(511,0,511,255); // жирная
        do Screen.drawLine(510,0,510,255); // правая граница
        do Screen.drawLine(100,0,511,0); // жирная
        do Screen.drawLine(100,1,511,1); // верхняя граница
        do Screen.drawLine(100,255,511,255); // жирная
        do Screen.drawLine(100,254,511,254); // нижняя граница

        return;
    }  

    method void gameOver()
    {
        var char key;
        do Screen.clearScreen();
        do Output.moveCursor(11,22);
        do Output.printString("Game Over");
        do Output.moveCursor(13,22);
        do Output.printString("High Score: ");
        do Output.printInt(highScore);
        while(~exit)
        {
            let key = Keyboard.keyPressed();
            if (key = 81)
            {
                let exit = true;
            }
        }
        return;
    }

    method void death() 
    {
        let lives = lives - 1;
        do snake.setAlive(true);
        if(score > highScore)
        {
            let highScore = score;           
        }
        let score = 0;
        
        if(lives > 0)
        {
            do snake.initSnake(300,126);
            do Screen.clearScreen(); 
            do drawBorder();
            let direction = 0;
            do snake.draw();
            do apple();
        }
        else
        {
           do snake.erase();
           do gameOver();
        }

        return;
    }

    method void moveSnake() 
    {
        var int currDir;
        var int distance;
        var int snakeLength; 
        let distance = dist(snake.getXcord(), snake.getYcord()); 
        let currDir = snake.getCurrDir();
        if (distance < 5) 
        {
            do pointsApple();
        }
        if(~(snake.getAlive())) // проверка на то, что змея откинулась
        {
           do Output.printString("Hehe! Death))");
           do death();
        }
        //нажата стрелка вверх
        if ((direction = 1))  
        { 
            if((currDir = 2)) //старое вниз
            {
                let direction = currDir; //поменять направление
            }
            else 
            {
                do snake.moveUp();
                do snake.updateSnake();
                do snake.setCurrDir(1);
            }
        }
        //нажата стрелка вниз
        if ((direction) = 2) 
        {
            if((currDir = 1)) //старое вверх
            {
                let direction = currDir; //поменять направление
            }
            else 
            {
                do snake.moveDown();
                do snake.updateSnake();
                do snake.setCurrDir(2);
            }
        }
        //нажата стрелка влево
        if (direction = 3) 
        {
            if((currDir = 4)) //старое вправо
            {
                let direction = currDir; //поменять направление
            }
            else 
            {
                do snake.moveLeft();
                do snake.updateSnake();
                do snake.setCurrDir(3);
            }
        }
        //нажата стрелка вправо
        if (direction = 4) 
        { 
            if((currDir = 3)) //старое влево
            {
                let direction = currDir; //поменять направление
            }
            else 
            {
                do snake.moveRight();
                do snake.updateSnake();
                do snake.setCurrDir(4);
            }
        }
        return;
    }

    method int dist(int xSnake, int ySnake)
    {
        var int distance;
        var int xDist;
        var int yDist;
        var int bothDist;
        let xDist = Math.multiply((xApple-xSnake), (xApple-xSnake));
        let yDist = Math.multiply((yApple-ySnake), (yApple-ySnake));
        let bothDist = xDist + yDist; 
        if(bothDist>0)
        {
            return Math.sqrt(bothDist);
        }
        return 42;
    }
    
    method void apple()
    {
        let xApple = 150;
        let yApple = 150;
        do Screen.setColor(true);
        do Screen.drawCircle(150,150,5);
        return; 
    }

    method void pointsApple()
    {
        var int distance;
        var int snakeLength;
        
        let distance = dist(snake.getXcord(), snake.getYcord()); 
        let appleCounter = appleCounter + 1; 
        do Screen.setColor(false);
        do Screen.drawCircle(xApple,yApple,5);
        let score = score + 10;
        do Output.moveCursor(3,7);  
        do Output.printInt(score);
        let snakeLength = snake.getLength() + 100;
        if (snakeLength < snake.getMaxLength())
        {
            do snake.setLength(snakeLength);
        }
        do randomApple(); 
        do Screen.setColor(true);
        do Screen.drawCircle(xApple,yApple,5);
            
        return;
    }

    method void randomApple()
    {
        if (appleCounter = 1)
        {
            let xApple = 120;
            let yApple = 50;
        }
        if (appleCounter = 2)
        {
            let xApple = 150;
            let yApple = 200;
        }
        if (appleCounter = 3)
        {
            let xApple = 300;
            let yApple = 150;
        }
        if (appleCounter = 4)
        {
            let xApple = 250;
            let yApple = 50;
        }
        if (appleCounter = 5)
        {
            let xApple = 400;
            let yApple = 200;  
        }
        if (appleCounter = 6)
        {
            let xApple = 200;
            let yApple = 70;  
        }
        if (appleCounter = 7)
        {
            let xApple = 450;
            let yApple = 120;
            let appleCounter = 0;  
        } 
        return;
    }
}